
buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}
/*
 * Copyright (C) 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
}

dependencies {


        implementation "com.android.support:support-v4:28.0.0"
        implementation "com.android.support:support-v13:28.0.0"
        implementation "com.android.support:cardview-v7:28.0.0"
        implementation "com.android.support:appcompat-v7:28.0.0"






}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 28

    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName '1.0'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
}
  26  
AppRestrictions/Application/src/main/AndroidManifest.xml
@@ -14,38 +14,40 @@
 See the License for the specific language governing permissions and
 limitations under the License.
-->



<manifest xmlns:android="http://schemas.android.com/apk/res/android"
<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.android.apprestrictions"
    android:versionCode="1"
    android:versionName="1.0">
    package="com.example.android.apprestrictions">

    <!-- Min/target SDK versions (<uses-sdk>) managed by build.gradle -->

    <application android:label="@string/app_name"
        android:icon="@mipmap/ic_launcher"
    <application
        android:allowBackup="true"
        android:fullBackupContent="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning">

        <activity android:name="MainActivity"
            android:label="@string/app_name" >
        <activity
            android:name="MainActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name="CustomRestrictionsActivity"
        <activity
            android:name="CustomRestrictionsActivity"
            android:label="@string/restrictions_activity_label" />

        <receiver android:name="GetRestrictionsReceiver">
            <intent-filter>
                <action android:name="android.intent.action.GET_RESTRICTION_ENTRIES" />
            </intent-filter>
        </receiver>

    </application>

</manifest>
  12  
...ication/src/main/java/com/example/android/apprestrictions/CustomRestrictionsActivity.java
@@ -16,29 +16,31 @@

package com.example.android.apprestrictions;

import android.app.Activity;
import android.os.Bundle;

import androidx.appcompat.app.AppCompatActivity;

/**
 * This activity demonstrates how an app can integrate its own custom app restriction settings
 * with the restricted profile feature.
 *
 * <p>
 * This sample app maintains custom app restriction settings in shared preferences.  When
 * the activity is invoked (from Settings > Users), the stored settings are used to initialize
 * the custom configuration on the user interface.  Three sample input types are
 * shown: checkbox, single-choice, and multi-choice.  When the settings are modified by the user,
 * the corresponding restriction entries are saved, which are retrievable under a restricted
 * profile.
 */
public class CustomRestrictionsActivity extends Activity {
public class CustomRestrictionsActivity extends AppCompatActivity {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        if (savedInstanceState == null) {
            getFragmentManager().beginTransaction().replace(android.R.id.content,
                    new CustomRestrictionsFragment()).commit();
            getSupportFragmentManager().beginTransaction()
                    .replace(android.R.id.content, new CustomRestrictionsFragment())
                    .commitNow();
        }
    }
}
